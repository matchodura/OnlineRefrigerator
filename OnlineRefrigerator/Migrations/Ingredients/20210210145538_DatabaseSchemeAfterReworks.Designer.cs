// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineRefrigerator.Data;

namespace OnlineRefrigerator.Migrations.Ingredients
{
    [DbContext(typeof(IngredientsContext))]
    [Migration("20210210145538_DatabaseSchemeAfterReworks")]
    partial class DatabaseSchemeAfterReworks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineRefrigerator.Models.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Carbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Energy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ServingId")
                        .HasColumnType("int");

                    b.Property<int?>("ServingValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ServingId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.IngredientsCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IngredientsCategories");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.IngredientsImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("IngredientsImages");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.IngredientsRecipes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("ServingQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ServingType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IngredientsRecipes");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.Recipes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("VoteCounts")
                        .HasColumnType("int");

                    b.Property<int?>("VoteValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("TypeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.RecipesCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RecipesCategories");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.RecipesImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("RecipesImages");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.RecipesSteps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecipesSteps");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.Servings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServingValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servings");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.UserVotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoteValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserVotes");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.Ingredients", b =>
                {
                    b.HasOne("OnlineRefrigerator.Models.IngredientsCategories", "Category")
                        .WithMany("Ingredient")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineRefrigerator.Models.IngredientsImages", "Image")
                        .WithMany("Ingredient")
                        .HasForeignKey("ImageId");

                    b.HasOne("OnlineRefrigerator.Models.Servings", "Serving")
                        .WithMany("Ingredient")
                        .HasForeignKey("ServingId");
                });

            modelBuilder.Entity("OnlineRefrigerator.Models.Recipes", b =>
                {
                    b.HasOne("OnlineRefrigerator.Models.RecipesImages", "Image")
                        .WithMany("Recipe")
                        .HasForeignKey("ImageId");

                    b.HasOne("OnlineRefrigerator.Models.RecipesCategories", "Type")
                        .WithMany("Recipes")
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}

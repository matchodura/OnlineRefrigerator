@model OnlineRefrigerator.Models.IngredientsCategoryViewModel
@{
    ViewData["Title"] = "Search Ingredients";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="jumbotron">
    <h1 class="display-3">@ViewData["Title"]</h1>
    <hr class="my-4">
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>

    <form>
        <div class="form-row">
            <div class="form-group col-md-6">
                @*<label for="Ingredient">Ingredient</label>*@
                <input type="text" id="ingredient" placeholder="Write ingredient name" class="form-control">
            </div>
            <div class="form-group col-md-6">
                @*<label for="Category">Category</label>*@
                @* TODO: dodac opcje wyboru kategorii z bazy danych *@
                <select class="form-control" id="category">
                    <option value="0">All</option>
                    <option value="1">Vegetables</option>
                    <option value="2">Fruits</option>
                    <option value="3">Meat</option>
                </select>
            </div>
        </div>
    </form>


    <div id="displayIngredients"> </div>

    @section Scripts{

        <script src="~/js/ingredients-functions.js"></script>
        <script src="~/js/ingredients-display.js"></script>
        <script src="~/js/ingredients-sort.js"></script>

    }

</div>

@* @item.Name wtedy gdy chcemy wyświetlić na sucho dane, @Html.DisplayFor(modelItem => item.Name, gdy mamy jakiś styl zastosowany)*@


